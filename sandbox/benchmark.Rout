
R version 4.1.1 (2021-08-10) -- "Kick Things"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #####
> options(digits = 3L)
> 
> library(parglm)
> n <- 20000L
> p <- 100L
> li <- binomial("logit")
> sds <- p:1
> sds <- sqrt(sds^2 / sum(sds^2))
> set.seed(13103921)
> X <- matrix(nrow = n, ncol = p)
> for(i in 1:p)
+   X[, i] <- rnorm(n, 1/p, sds[i])
> y <- 1/(1 + exp(-(1 - rowSums(X)))) > runif(n)
> 
> fit_func <- function(ctrl)
+   parglm(y ~ X, binomial(), control = ctrl)
> 
> library(microbenchmark)
> mic <- microbenchmark(
+   glm  = glm_fit <- glm(y ~ X, binomial()),
+ 
+   `QR 1` = fit_func(parglm.control(nthreads = 1)),
+   `QR 2` = fit_func(parglm.control(nthreads = 2)),
+   `QR 4` = fit_func(parglm.control(nthreads = 4)),
+ 
+   `fast 1` = f4 <- fit_func(parglm.control(nthreads = 1, method = "FAST")),
+   `fast 2` = f4 <- fit_func(parglm.control(nthreads = 2, method = "FAST")),
+   `fast 4` = f4 <- fit_func(parglm.control(nthreads = 4, method = "FAST")),
+   times = 5, setup = gc())
> summary(mic)[, c("expr", "lq", "median", "uq")]
    expr  lq median  uq
1    glm 671    712 758
2   QR 1 734    742 773
3   QR 2 419    421 427
4   QR 4 290    297 355
5 fast 1 417    420 424
6 fast 2 224    239 240
7 fast 4 145    157 177
> 
> b_size <- n / 4L / 5L
> v <- microbenchmark(
+   glm  = glm_fit <- glm(y ~ X, binomial()),
+   `QR 1` = fit_func(parglm.control(nthreads = 1, block_size = b_size)),
+   `QR 2` = fit_func(parglm.control(nthreads = 2, block_size = b_size)),
+   `QR 4` = fit_func(parglm.control(nthreads = 4, block_size = b_size)),
+ 
+   `fast 1` = fit_func(parglm.control(
+     nthreads = 1, method = "FAST", block_size = b_size)),
+   `fast 2` = fit_func(parglm.control(
+     nthreads = 2, method = "FAST", block_size = b_size)),
+   `fast 4` = fit_func(parglm.control(
+     nthreads = 4, method = "FAST", block_size = b_size)),
+   times = 5, setup = gc())
> summary(mic)[, c("expr", "lq", "median", "uq")]
    expr  lq median  uq
1    glm 671    712 758
2   QR 1 734    742 773
3   QR 2 419    421 427
4   QR 4 290    297 355
5 fast 1 417    420 424
6 fast 2 224    239 240
7 fast 4 145    157 177
> 
> proc.time()
   user  system elapsed 
 48.991   0.444  33.727 
